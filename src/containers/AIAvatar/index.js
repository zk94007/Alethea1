import React, { Component } from "react";
import { ReactSVG } from "react-svg";
import PerfectScrollbar from "react-perfect-scrollbar";
import "react-perfect-scrollbar/dist/css/styles.css";
import { Button, Hidden, MobileStepper } from "@material-ui/core";
import "./styles.scss";
import SwipeableViews from "react-swipeable-views";
import InventoryItem from "../../compnents/InventoryItem";
import AIAvatarItem from "../../compnents/AIAvatarItem";
import CustomAvatar from "../../compnents/CustomAvatar";

const AVATARS = [
  {
    title: "Custom AI Avatar",
    description: "Generate and use your own AI Avatar from just one image.",
    text: "Please upload an image that matches the description of a headshot, or passport photo.",
    imageSrc: "https://wav2lip.s3.us-east-2.amazonaws.com/inventory-1.png",
  },
  {
    title: "User-Generated AI Avatars",
    description: "Select one of the AI Avatars generated by our users.",
    text: "Select your favorite user-generated AI Avatar, for details click on the top right button.",
    imageSrc: "https://wav2lip.s3.us-east-2.amazonaws.com/inventory-2.png",
  },
  {
    title: "Tokenized AI Avatars",
    description: "Create digital media featuring a tokenized AI Avatar, get rewarded for being a supporter.",
    text: "Select your favorite user-generated AI Avatar.",
    imageSrc: "https://wav2lip.s3.us-east-2.amazonaws.com/inventory-3.png",
  },
];

export default class AIAvatars extends Component {
  constructor(props, context) {
    super(props, context);
    this.state = {
      selectedIndex: null,
      pageIndex: 1,
    };
  }

  renderHead() {
      let title = "AI Avatars";
      let text = "Which type of AI Avatars would you like to use?";
      const { selectedIndex, pageIndex } = this.state;

      if (pageIndex > 1) {
          title = selectedIndex.title;
          text = selectedIndex.text;
      }
    return (
      <div className="d-flex flex-column w-100 align-items-center">
        <h3 className="mt-4 mx-xl-5 mx-lg-4 mx-md-3 mx-sm-5 mx-3 mb-2 font-weight-semi-bold text-center">
            {title}
        </h3>
        <h5 className="gray-color mx-4 mb-4 text-center">
            {text}
        </h5>
      </div>
    );
  }

  renderOptions() {
      const { selectedIndex, pageIndex } = this.state;
      return (
          <div className="row flex-fill mx-3 mx-md-0">
              {AVATARS.map((e, n) => (
                  <div className="col-12 col-xl-4 col-md-6 p-0 pl-md-4">
                      <AIAvatarItem
                          index={n}
                          onClick={(n) => this.setState({ selectedIndex: e, pageIndex: n ?? pageIndex })}
                          key={n}
                          isActive={selectedIndex === null ? null : selectedIndex === e}
                          title={e.title}
                          description={e.description}
                          src={e.imageSrc}
                      />
                  </div>
              ))}
          </div>
      );
  }

  renderMain() {
    const { pageIndex } = this.state;
    switch(pageIndex) {
        case 1:
        return this.renderOptions();
        case 2:
            return (
                <div className="row flex-fill mx-3 mx-md-0">
                    <CustomAvatar />
                </div>
            );
        default:
            return;
    }

  }

  renderButtons() {
      const {pageIndex, selectedIndex} = this.state;

      switch (pageIndex) {
          case 1:
              return (<Hidden smUp>
                  <Button
                      variant="contained"
                      disabled={selectedIndex === null}
                      color="primary"
                      className="m-3"
                      onClick={() => this.setState({ pageIndex: 2 })}
                  >
                      Select and continue
                  </Button>
              </Hidden>);
          case 2:
              return (
                  <Button
                      variant="contained"
                      color="primary"
                      className="m-3"
                      onClick={() => this.setState({ pageIndex: 2 })}
                  >
                      Upload image
                  </Button>
              )
          default:
              return ;
      }
}

  render() {
    const {pageIndex, selectedIndex} = this.state;
    return (
      <div className="vh-100">
        <div className="row p-0 m-0">
          <div className="d-flex flex-column col-12 col-md-3 vh-100 p-0 splitter">
            <PerfectScrollbar className="d-flex flex-column flex-fill align-items-center">
              <Hidden xsDown>
                <ReactSVG
                  src="logo_white.svg"
                  className="logo-max-width p-0 mx-xl-5 mx-lg-4 mx-md-3 mx-sm-5 my-5"
                />
              </Hidden>
              {this.renderHead()}
              <div className="w-100 px-xl-3 px-lg-4 px-md-3 px-sm-5 d-flex flex-fill">
                <Hidden smUp={selectedIndex === null}>
                  {this.renderMain()}
                </Hidden>
              </div>
            </PerfectScrollbar>
            <div className="d-flex flex-column bottom-stepper">
              { this.renderButtons() }
              <MobileStepper
                variant="dots"
                steps={4}
                position="static"
                activeStep={pageIndex}
                nextButton={<div />}
                backButton={<div />}
              />
            </div>
          </div>
          <Hidden xsDown>
            <div className="d-flex col-12 col-md-9 vh-max-100 overflow-hidden flex-column py-3 pr-3 pl-2">
              <h1 className="font-weight-semi-bold m-3 ml-4">AI Avatars</h1>
              <PerfectScrollbar className="flex-fill my-3 mr-3 ml-0">
                {this.renderOptions()}
              </PerfectScrollbar>
            </div>
          </Hidden>
        </div>
      </div>
    );
  }
}
